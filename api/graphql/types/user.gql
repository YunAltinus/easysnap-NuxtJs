scalar Date

type Query {
  user(id: ID!): User!
  users: [User!]!

  activeUser: User
}

type User {
  id: ID!
  username: String!
  createdAt: Date!
  snaps: [Snap]!
}

type Mutation {
  createUser(data: createUserInput!): Token
  singIn(data: SingInToken!): Token
}

input createUserInput {
  username: String!
  password: String!
  passwordConfirm: String!
}

input SingInToken {
  username: String!
  password: String!
}

type Subscription {
  user: User
}